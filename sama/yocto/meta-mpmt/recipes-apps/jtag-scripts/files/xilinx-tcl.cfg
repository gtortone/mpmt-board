#
# TCL to allow the Xilinx PS7 Init TCL code to run in OpenOCD.
#

proc mrd { args } {
    if {[llength $args] == 0} {
        echo "mrd address \[count \[w|h|b\]\]"
        echo "    Read <count> memory locations starting at <address>.  Defaults to one word."
        return
    }
    set addr [lindex $args 0]
    set count  1
    set bits  32
    if {[llength $args] > 1} {
        set count [lindex $args 1]
        if {[llength $args] > 2} {
            switch [lindex $args 2] {
                w       { set bits 32 }
                h       { set bits 16 }
                b       { set bits  8 }
                default { set bits 32 }
            }
        }
    }
    set value [read_memory $addr $bits $count]
    return [format "%8X:   %08lX\n" $addr $value]
}

proc mwr { args } {
  #set addr [lindex $args 1]
  #set data [lindex $args 2]
  set addr [lindex $args 0]
  set data [lindex $args 1]
  mww $addr $data
}

proc mask_write {addr mask data} {
   #echo "$addr $mask $data"
   set addr [expr {$addr & ~0x3}]
   set curval 0x[string range [mrd $addr] end-8 end]
   set newval [expr {($curval & ~$mask) | ($data & $mask)}]
   mwr $addr $newval
}

proc xilinx_ps7_init { } {
   poll off
   #reset init
   #reset halt
   targets zynq.cpu0
   sleep 100
   halt
   ps7_debug
   ps7_init
   ps7_post_config
   poll on
}
